name: Build YADAS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Get commit hash, set variables and app version
        id: vars
        run: |
          COMMIT_HASH=$(echo ${GITHUB_SHA} | cut -c1-7)
          CURRENT_DATE=$(date +%Y%m%d)
          APP_VERSION="v${CURRENT_DATE} (${COMMIT_HASH})"
          echo "COMMIT_HASH=${COMMIT_HASH}" >> $GITHUB_ENV
          echo "Replacing APP_VERSION with ${APP_VERSION}"
          sed -i.bak "s/^APP_VERSION = .*/APP_VERSION = '${APP_VERSION}'/" package/consts/consts.py
        shell: bash

      - name: Build the project
        run: |
          pyuic6 -o package/ui/main_window_ui.py designer/main_window.ui
          if [ "${{ runner.os }}" == "Windows" ]; then
            pyinstaller main.py -n yadas --onefile --windowed --icon=icons/logo.ico --add-data="icons/logo.png;icons" --distpath dist/${{ runner.os }}
            mv dist/${{ runner.os }}/yadas.exe dist/${{ runner.os }}/yadas-${COMMIT_HASH}.exe
            echo "FILE_PATH=dist/${{ runner.os }}/yadas-${COMMIT_HASH}.exe" >> $GITHUB_ENV
            echo "FILE_NAME=yadas-${{ runner.os }}-${COMMIT_HASH}.exe" >> $GITHUB_ENV
          else
            pyinstaller main.py -n yadas --onefile --windowed --distpath dist/${{ runner.os }}
            mv dist/${{ runner.os }}/yadas dist/${{ runner.os }}/yadas-${COMMIT_HASH}
            echo "FILE_PATH=dist/${{ runner.os }}/yadas-${COMMIT_HASH}" >> $GITHUB_ENV
            echo "FILE_NAME=yadas-${{ runner.os }}-${COMMIT_HASH}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Archive Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: yadas-${{ runner.os }}-${{ env.COMMIT_HASH }}
          path: |
            dist/${{ runner.os }}/*

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: yadas-${{ env.COMMIT_HASH }}
          release_name: yadas-${{ env.COMMIT_HASH }}
          draft: false
          prerelease: false
          body: ${{ github.event.head_commit.message }}
        if: success()

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.FILE_PATH }}
          asset_name: ${{ env.FILE_NAME }}
          asset_content_type: application/octet-stream
        if: success()
